function showForm() {
  const type = document.getElementById("promptType").value;
  const form = document.getElementById("formulario");
  const output = document.getElementById("resultado");
  output.textContent = "";

  const forms = {
    texto: `
      <label>Especialidad o rol experto:</label>
      <input type="text" id="rol" placeholder="Ej: M√©dico especialista en Pediatr√≠a">
      <label>Tarea espec√≠fica:</label>
      <input type="text" id="tarea" placeholder="Ej: redactar resumen cl√≠nico...">
      <label>Contexto o audiencia:</label>
      <input type="text" id="contexto" placeholder="Ej: para estudiantes de medicina">
      <label>Estilo o tono deseado:</label>
      <input type="text" id="tono" placeholder="Ej: acad√©mico, claro, formal">
      <label>Formato de salida:</label>
      <input type="text" id="formato" placeholder="Ej: lista con 3 puntos clave">
      <button onclick="generarTexto()">Generar Prompt</button>
    `,
    datos: `
      <label>Rol anal√≠tico de la IA:</label>
      <input type="text" id="rol">
      <label>Descripci√≥n del conjunto de datos:</label>
      <textarea id="datos"></textarea>
      <label>Tareas de an√°lisis:</label>
      <input type="text" id="tareas">
      <label>Formato de resultados:</label>
      <input type="text" id="formato">
      <button onclick="generarDatos()">Generar Prompt</button>
    `,
    clinico: `
      <label>Rol del profesional:</label>
      <input type="text" id="rol">
      <label>Datos del caso cl√≠nico:</label>
      <textarea id="caso"></textarea>
      <label>Tarea cl√≠nica solicitada:</label>
      <input type="text" id="tarea">
      <label>Formato de respuesta:</label>
      <input type="text" id="formato">
      <button onclick="generarClinico()">Generar Prompt</button>
    `,
    asistente: `
      <label>Nombre y misi√≥n del asistente:</label>
      <input type="text" id="nombre">
      <label>P√∫blico objetivo:</label>
      <input type="text" id="publico">
      <label>Personalidad y tono:</label>
      <input type="text" id="tono">
      <label>Reglas de comportamiento:</label>
      <textarea id="reglas"></textarea>
      <button onclick="generarAsistente()">Generar Prompt</button>
    `
  };

  form.innerHTML = forms[type] || "";
}

// Funciones generadoras
function generarTexto() {
  const rol = document.getElementById("rol").value;
  const tarea = document.getElementById("tarea").value;
  const contexto = document.getElementById("contexto").value;
  const tono = document.getElementById("tono").value;
  const formato = document.getElementById("formato").value;
  document.getElementById("resultado").textContent =
    `Eres ${rol}. Tu tarea es ${tarea}. Contexto: ${contexto}. Estilo: ${tono}. Formato: ${formato}.`;
}

function generarDatos() {
  const rol = document.getElementById("rol").value;
  const datos = document.getElementById("datos").value;
  const tareas = document.getElementById("tareas").value;
  const formato = document.getElementById("formato").value;
  document.getElementById("resultado").textContent =
    `${rol}. Base de datos: ${datos}. Tareas: ${tareas}. Formato: ${formato}.`;
}

function generarClinico() {
  const rol = document.getElementById("rol").value;
  const caso = document.getElementById("caso").value;
  const tarea = document.getElementById("tarea").value;
  const formato = document.getElementById("formato").value;
  document.getElementById("resultado").textContent =
    `Act√∫a como ${rol}. Caso: ${caso}. Tarea: ${tarea}. Formato: ${formato}.`;
}

function generarAsistente() {
  const nombre = document.getElementById("nombre").value;
  const publico = document.getElementById("publico").value;
  const tono = document.getElementById("tono").value;
  const reglas = document.getElementById("reglas").value;
  document.getElementById("resultado").textContent =
    `Eres ${nombre}. P√∫blico objetivo: ${publico}. Tono: ${tono}. Comportamiento esperado: ${reglas}.`;
}

function copiarPrompt() {
  const prompt = document.getElementById("resultado").textContent;
  if (!prompt) return;
  navigator.clipboard.writeText(prompt)
    .then(() => alert("‚úÖ Prompt copiado al portapapeles"))
    .catch(() => alert("‚ùå Error al copiar el prompt"));
}

function sugerirModelo(tipo) {
  const sugerencia = {
    texto: "üí° Modelo sugerido: GPT-4 o GPT-4o, ideal para generaci√≥n de textos con contexto y estilo.",
    datos: "üí° Modelo sugerido: GPT-4 (para an√°lisis avanzado) o GPT-3.5-turbo para estad√≠sticas b√°sicas.",
    clinico: "üí° Modelo sugerido: GPT-4, con indicaciones cl√≠nicas expl√≠citas (usa rol m√©dico especializado).",
    asistente: "üí° Modelo sugerido: GPT-4 o GPT-4o, con memoria activada para mantener coherencia conversacional."
  };
  document.getElementById("sugerenciaIA").textContent = sugerencia[tipo] || "";
}

function showForm() {
  const type = document.getElementById("promptType").value;
  const form = document.getElementById("formulario");
  const output = document.getElementById("resultado");
  const sugerencia = document.getElementById("sugerenciaIA");
  output.textContent = "";
  sugerencia.textContent = "";

  const forms = {
    texto: `
      <label>Especialidad o rol experto:</label>
      <input type="text" id="rol" placeholder="Ej: M√©dico especialista en Infectolog√≠a">
      <label>Tarea espec√≠fica:</label>
      <input type="text" id="tarea" placeholder="Ej: elaborar un resumen de la fisiopatolog√≠a de la sepsis...">
      <label>Contexto o audiencia:</label>
      <input type="text" id="contexto" placeholder="Ej: para m√©dicos en formaci√≥n de postgrado">
      <label>Estilo o tono deseado:</label>
      <input type="text" id="tono" placeholder="Ej: tono narrativo t√©cnico, voz neutral">
      <label>Formato de salida:</label>
      <input type="text" id="formato" placeholder="Ej: 2 p√°rrafos de m√°ximo 150 palabras">
      <button onclick="generarTexto()">Generar Prompt</button>
    `,
    datos: `
      <label>Rol anal√≠tico de la IA (Ej: Act√∫a como epidemi√≥logo experto):</label>
      <input type="text" id="rol">
      <label>Descripci√≥n del conjunto de datos (variables, cantidad, grupo poblacional, etc.):</label>
      <textarea id="datos"></textarea>
      <label>Tareas de an√°lisis (Ej: calcular estad√≠sticas, buscar correlaciones):</label>
      <input type="text" id="tareas">
      <label>Formato de resultados esperados (Ej: lista de insights, tabla, resumen por secciones):</label>
      <input type="text" id="formato">
      <button onclick="generarDatos()">Generar Prompt</button>
    `,
    clinico: `
      <label>Rol cl√≠nico de la IA (Ej: Eres internista, cardi√≥logo, pediatra...):</label>
      <input type="text" id="rol">
      <label>Informaci√≥n cl√≠nica completa (edad, sexo, s√≠ntomas, antecedentes, hallazgos):</label>
      <textarea id="caso"></textarea>
      <label>Qu√© esperas que haga la IA (Ej: elaborar diagn√≥stico diferencial, plan de manejo):</label>
      <input type="text" id="tarea">
      <label>C√≥mo debe responder (Ej: lista priorizada de diagn√≥sticos, tabla, pasos):</label>
      <input type="text" id="formato">
      <button onclick="generarClinico()">Generar Prompt</button>
    `,
    asistente: `
      <label>Define qui√©n es el asistente y qu√© debe hacer (Ej: Eres PromptDoc, ayudas a estructurar prompts en salud p√∫blica):</label>
      <input type="text" id="nombre">
      <label>¬øA qui√©n atender√°? (Ej: M√©dicos generales, estudiantes, especialistas):</label>
      <input type="text" id="publico">
      <label>¬øC√≥mo debe comportarse? (Ej: Emp√°tico, t√©cnico, formal, cercano):</label>
      <input type="text" id="tono">
      <label>¬øC√≥mo debe saludar, responder, cerrar? ¬øQu√© no debe hacer? (Ej: No da consejos m√©dicos reales, siempre ofrece ayuda adicional):</label>
      <textarea id="reglas"></textarea>
      <button onclick="generarAsistente()">Generar Prompt</button>
    `
  };

  form.innerHTML = forms[type] || "";
  sugerirModelo(type);
}

function mostrarEjemplo(tipo) {
  const ejemplos = {
    texto: `üìã Ejemplo:
Eres un m√©dico especialista en Infectolog√≠a. Tu tarea es resumir las evidencias existentes en cuanto a la fisiopatolog√≠a de la sepsis en adultos. 
Contexto: para lectores m√©dicos en formaci√≥n de postgrado.
Estilo: tono narrativo t√©cnico, voz neutral.
Formato: m√°ximo 2 p√°rrafos y 150 palabras.`,

    datos: `üìã Ejemplo:
Act√∫a como analista de datos en epidemiolog√≠a.
Base de datos: 561 mujeres embarazadas mayores de 21 a√±os, con diagn√≥stico de diabetes.
Tareas: calcula media, mediana, rango por variable; identifica factores de riesgo mediante regresi√≥n.
Formato: lista con insights clave y sugerencia de visualizaciones.`,

    clinico: `üìã Ejemplo:
Act√∫a como internista.
Paciente: mujer, 35 a√±os, fiebre 5 d√≠as, tos productiva, dolor pleur√≠tico.
Rx: infiltrado LID; leucocitos 14,000.
Tarea: diagn√≥stico diferencial con justificaci√≥n y pruebas recomendadas.
Formato: lista ordenada de diagn√≥sticos con razonamiento.`,

    asistente: `üìã Ejemplo:
Eres PromptDoc, un asistente para redactar prompts en salud p√∫blica.
Tu p√∫blico: m√©dicos en formaci√≥n y epidemi√≥logos.
Tono: t√©cnico accesible, lenguaje claro. Siempre saluda cordialmente y ofrece ayuda adicional.
L√≠mites: no da consejos m√©dicos reales.
Ejemplo: Usuario: "¬øPuedes ayudarme con un prompt?" ‚Äì Asistente: "¬°Hola! Claro, dime si tu prompt ser√° para an√°lisis de datos, casos cl√≠nicos, redacci√≥n o creaci√≥n de bots."`
  };

  const container = document.getElementById("formulario");
  const div = document.createElement("div");
  div.className = "section output";
  div.style.marginTop = "1rem";
  div.textContent = ejemplos[tipo] || "";
  container.appendChild(div);
}
const oldShowFormBase = showForm;
showForm = function () {
  oldShowFormBase();
  const tipo = document.getElementById("promptType").value;
  mostrarEjemplo(tipo);
};
// Cabeceras t√©cnicas
const formHeaders = {
  texto:     "üîé Sugerencia t√©cnica: Define rol experto, tarea, contexto y formato de salida.",
  datos:     "üîé Sugerencia t√©cnica: Describe datos, rol anal√≠tico y tipo de an√°lisis.",
  clinico:   "üîé Sugerencia t√©cnica: Proporciona rol cl√≠nico, datos del caso y pide razonamiento.",
  asistente: "üîé Sugerencia t√©cnica: Define identidad del bot, audiencia y funciones."
};

// Formularios guiados
const contextForms = {
  texto: `
    <div class="form-window">
      <div><label>1. Rol o experto:</label><input id="role" placeholder="Experto en diagn√≥stico de sepsis" /></div>
      <div><label>2. Tarea espec√≠fica:</label><input id="task" placeholder="E.g.: Resume la fisiopatolog√≠a de la sepsis" /></div>
      <div><label>3. Contexto/Detalles:</label><input id="context" placeholder="E.g.: Para estudiantes de postgrado" /></div>
      <div><label>4. Estilo/Tono:</label><input id="style" placeholder="E.g.: Formal, APA" /></div>
      <div><label>5. Formato de salida:</label><input id="format" placeholder="E.g.: 2 p√°rrafos, <150 palabras" /></div>
      <button onclick="buildPrompt()">Generar Prompt</button>
    </div>
  `,
  datos: `
    <div class="form-window">
      <div><label>1. Descripci√≥n de datos:</label><textarea id="dataDesc" rows="2" placeholder="Ej.: CSV con 561 pacientes"></textarea></div>
      <div><label>2. Rol anal√≠tico:</label><input id="dataRole" placeholder="Act√∫a como analista epidemiol√≥gico" /></div>
      <div><label>3. Tareas de an√°lisis:</label><input id="dataTask" placeholder="E.g.: Estad√≠sticas descriptivas, regresi√≥n" /></div>
      <div><label>4. Enfoque/Criterios:</label><input id="dataFocus" placeholder="E.g.: Identificar factores de riesgo" /></div>
      <div><label>5. Formato de resultados:</label><input id="dataFormat" placeholder="E.g.: Lista de insights clave" /></div>
      <button onclick="buildPrompt()">Generar Prompt</button>
    </div>
  `,
  clinico: `
    <div class="form-window">
      <div><label>1. Rol cl√≠nico:</label><input id="clinRole" placeholder="Experto en diagn√≥stico cardiol√≥gico" /></div>
      <div><label>2. Presentaci√≥n del caso:</label><textarea id="clinCase" rows="2" placeholder="E.g.: Var√≥n 65a con dolor tor√°cico"></textarea></div>
      <div><label>3. Tarea m√©dica:</label><input id="clinTask" placeholder="Ej.: Diagn√≥stico diferencial con justificaci√≥n" /></div>
      <div><label>4. Gu√≠as/Evidencia:</label><input id="clinGuide" placeholder="E.g.: Seg√∫n gu√≠as ESC 2021" /></div>
      <div><label>5. Formato de respuesta:</label><input id="clinFormat" placeholder="Ej.: Lista priorizada del 1 al 5" /></div>
      <button onclick="buildPrompt()">Generar Prompt</button>
    </div>
  `,
  asistente: `
    <div class="form-window">
      <div><label>1. Identidad del asistente:</label><input id="botRole" placeholder="E.g.: AssistPromptBotMed" /></div>
      <div><label>2. P√∫blico objetivo:</label><input id="botAudience" placeholder="E.g.: M√©dicos residentes" /></div>
      <div><label>3. Personalidad/Tono:</label><input id="botTone" placeholder="E.g.: Emp√°tico y directo" /></div>
      <div><label>4. Funciones espec√≠ficas:</label><input id="botFunctions" placeholder="E.g.: Sugerir plantillas de prompts cl√≠nicos" /></div>
      <div><label>5. Ejemplo de interacci√≥n:</label><textarea id="botExample" rows="2" placeholder="E.g.: Usuario: ¬øC√≥mo estructuro un prompt?"></textarea></div>
      <button onclick="buildPrompt()">Generar Prompt</button>
    </div>
  `
};

// Mapas de modelo e IA
const modelMap = {
  texto:     "GPT-4 (ChatGPT)",
  datos:     "GPT-4 + Code Interpreter",
  clinico:   "GPT-4 (ChatGPT) / Claude",
  asistente: "GPT-4 con funciones avanzadas"
};
const iaMap = {
  texto:     "Scispace, Grammarly, Jasper, Notion AI",
  datos:     "Perplexity AI, WolframAlpha, Elicit.org, Dataiku",
  clinico:   "Consensus, EvidenceHunt, OpenRead, Elicit",
  asistente: "Research Rabbit, scite_, LangChain, FlowGPT"
};

// Al cambiar el tipo de prompt
function onContextChange() {
  const type = document.getElementById("tipoPrompt").value;
  document.getElementById("formHeader").innerText    = formHeaders[type] || "";
  document.getElementById("formContainer").innerHTML = contextForms[type] || "";
  document.getElementById("resultado").value         = "";
  document.getElementById("modeloSugerido").textContent = "";
  document.getElementById("sugerenciaIA").textContent = "";
}

// Construye el prompt
function buildPrompt() {
  const specialty = document.getElementById("specialty").value;
  const type      = document.getElementById("tipoPrompt").value;
  let prompt = "";
  let preSpec = specialty !== "General"
    ? `Eres un especialista en ${specialty}. `
    : "";

  if (type === "texto") {
    let role = document.getElementById("role").value.trim();
    if (role && !/^Eres/i.test(role)) role = `Eres un ${role}. `;
    const task = document.getElementById("task").value.trim();
    const ctx  = document.getElementById("context").value.trim();
    const style= document.getElementById("style").value.trim();
    const fmt  = document.getElementById("format").value.trim();
    prompt = `${preSpec}${role}Tu tarea es ${task}. Contexto: ${ctx}. Estilo: ${style}. Formato: ${fmt}.`;
  }
  else if (type === "datos") {
    let role = document.getElementById("dataRole").value.trim();
    if (role && !/^Act√∫a/i.test(role)) role = `Act√∫a como ${role}. `;
    const desc  = document.getElementById("dataDesc").value.trim();
    const task  = document.getElementById("dataTask").value.trim();
    const focus = document.getElementById("dataFocus").value.trim();
    const fmt   = document.getElementById("dataFormat").value.trim();
    prompt = `${preSpec}${role}Datos: ${desc}. Tarea: ${task}. Enfoque: ${focus}. Formato: ${fmt}.`;
  }
  else if (type === "clinico") {
    let role = document.getElementById("clinRole").value.trim();
    if (role && !/^Eres/i.test(role)) role = `Eres un ${role}. `;
    const cc   = document.getElementById("clinCase").value.trim();
    const task = document.getElementById("clinTask").value.trim();
    const gui  = document.getElementById("clinGuide").value.trim();
    const fmt  = document.getElementById("clinFormat").value.trim();
    prompt = `${preSpec}${role}Caso: ${cc}. Tarea: ${task}. Gu√≠as: ${gui}. Formato: ${fmt}.`;
  }
  else if (type === "asistente") {
    let role = document.getElementById("botRole").value.trim();
    if (role && !/^Eres/i.test(role)) role = `Eres ${role}. `;
    const aud = document.getElementById("botAudience").value.trim();
    const tone= document.getElementById("botTone").value.trim();
    const fun = document.getElementById("botFunctions").value.trim();
    const ex  = document.getElementById("botExample").value.trim();
    prompt = `${preSpec}${role}para ${aud}. Personalidad: ${tone}. Funciones: ${fun}. Ejemplo: ${ex}.`;
  }

  document.getElementById("resultado").value           = prompt;
  document.getElementById("modeloSugerido").textContent = modelMap[type] || "";
  document.getElementById("sugerenciaIA").textContent  = iaMap[type]    || "";
}

// Copiar prompt
function copiarPrompt() {
  const ta = document.getElementById("resultado");
  ta.select();
  document.execCommand("copy");
  alert("‚úÖ Prompt copiado al portapapeles.");
}